cmake_minimum_required (VERSION 2.6)

project (coding-puzzle)

set(CMAKE_VERBOSE_MAKEFILE ON)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++14 -Wall -g3")
include_directories("/usr/include/Catch/include")

function(get_subdirectories_recursively result current_dir)
    file(GLOB children RELATIVE ${current_dir} ${current_dir}/*)
    set(dirlist "")
    foreach(child ${children})
        if(IS_DIRECTORY ${current_dir}/${child})
            list(APPEND dirlist ${current_dir}/${child})
            get_subdirectories_recursively(subdirs ${current_dir}/${child})
            list(APPEND dirlist ${subdirs})
        endif()
    endforeach()
    set(${result} ${dirlist} PARENT_SCOPE)
endfunction(get_subdirectories_recursively)

get_subdirectories_recursively(subdirs ${CMAKE_CURRENT_LIST_DIR})
foreach(subdir ${subdirs})
    get_filename_component(dirname ${subdir} NAME)
    set(test_cpp ${subdir}/test.cpp)
    set(executable_file test_${dirname})
    if(EXISTS ${test_cpp})
        message("adding target ${executable_file}")
        add_executable(${executable_file} ${test_cpp})
        set(run_target run_${executable_file})
        add_custom_target(${run_target} COMMAND "./${executable_file}" DEPENDS ${executable_file})
        set(run_all_command ${run_all_command} COMMAND "./${executable_file}")
        set(run_all_dependencies ${run_all_dependencies} "${executable_file}")
    endif()
endforeach()

add_custom_target(run_all ${run_all_command} DEPENDS ${run_all_dependencies})
